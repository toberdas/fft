[gd_scene load_steps=7 format=2]

[ext_resource path="res://assets/shaders/screentransitions/screentransition_swirl.gdshader" type="Shader" id=1]

[sub_resource type="ShaderMaterial" id=5]
shader = ExtResource( 1 )
shader_param/progress = 1.005

[sub_resource type="QuadMesh" id=1]
material = SubResource( 5 )
size = Vector2( 2, 2 )

[sub_resource type="Shader" id=4]
code = "shader_type spatial;

uniform float progress;

void vertex() {
	POSITION = vec4(VERTEX, 1.0);
}

void fragment() {
	float Radius = 1.0;

	float T = progress;

	vec2 newUV = SCREEN_UV - vec2( 0.5, 0.5 );

	float Dist = length(newUV);

	if ( Dist < Radius )
	{
		float Percent = (Radius - Dist) / Radius;
		float A = ( T <= 0.5 ) ? mix( 0.0, 1.0, T/0.5 ) : mix( 1.0, 0.0, (T-0.5)/0.5 );
		float Theta = Percent * Percent * A * 8.0 * 3.14159;
		float S = sin( Theta );
		float C = cos( Theta );
		newUV = vec2( dot(newUV, vec2(C, -S)), dot(newUV, vec2(S, C)) );
	}
	newUV += vec2( 0.5, 0.5 );

	vec4 C0 = vec4(0,0,0,0);
	vec4 C1 = texture(SCREEN_TEXTURE,newUV);

	ALBEDO = mix( C0, C1, T).rgb;
}
"

[sub_resource type="ShaderMaterial" id=2]
shader = SubResource( 4 )
shader_param/progress = 1.011

[sub_resource type="SpatialMaterial" id=3]
next_pass = SubResource( 2 )

[node name="Transition" type="Spatial"]

[node name="MeshInstance" type="MeshInstance" parent="."]
extra_cull_margin = 16384.0
mesh = SubResource( 1 )
material/0 = SubResource( 3 )
