[gd_resource type="VisualShader" load_steps=74 format=2]

[sub_resource type="VisualShaderNodeInput" id=6]
output_port_for_preview = 0
input_name = "uv"

[sub_resource type="VisualShaderNodeScalarFunc" id=7]
output_port_for_preview = 0
function = 31

[sub_resource type="VisualShaderNodeInput" id=9]
input_name = "uv"

[sub_resource type="VisualShaderNodeBooleanUniform" id=60]
uniform_name = "BooleanUniform"
default_value_enabled = true
default_value = true

[sub_resource type="VisualShaderNodeScalarOp" id=61]
operator = 2

[sub_resource type="VisualShaderNodeScalarFunc" id=62]
function = 31

[sub_resource type="VisualShaderNodeTexture" id=1]

[sub_resource type="VisualShaderNodeVectorOp" id=109]
operator = 1

[sub_resource type="VisualShaderNodeScalarOp" id=112]

[sub_resource type="VisualShaderNodeVectorSmoothStep" id=113]

[sub_resource type="VisualShaderNodeScalarFunc" id=114]
function = 29

[sub_resource type="VisualShaderNodeTexture" id=2]
texture_type = 2

[sub_resource type="VisualShaderNodeTexture" id=5]
output_port_for_preview = 0
texture_type = 1

[sub_resource type="VisualShaderNodeVec3Uniform" id=100]
uniform_name = "uv_scale"
default_value_enabled = true
default_value = Vector3( 1, 1, 1 )

[sub_resource type="VisualShaderNodeVectorOp" id=101]
operator = 2

[sub_resource type="VisualShaderNodeScalarUniform" id=102]
uniform_name = "world_location_add"
default_value_enabled = true
default_value = 1.0

[sub_resource type="VisualShaderNodeDotProduct" id=103]

[sub_resource type="VisualShaderNodeScalarSmoothStep" id=104]
default_input_values = [ 0, -1.0, 1, 1.0, 2, 0.0 ]

[sub_resource type="VisualShaderNodeScalarOp" id=105]
operator = 2

[sub_resource type="VisualShaderNodeVectorOp" id=10]
operator = 1

[sub_resource type="VisualShaderNodeVectorOp" id=11]
default_input_values = [ 0, Vector3( 0, 0, 0 ), 1, Vector3( 0, 1, 0 ) ]
operator = 2

[sub_resource type="VisualShaderNodeVectorFunc" id=12]

[sub_resource type="VisualShaderNodeInput" id=13]
input_name = "vertex"

[sub_resource type="VisualShaderNodeTransformVecMult" id=14]
operator = 1

[sub_resource type="VisualShaderNodeInput" id=15]
input_name = "world"

[sub_resource type="VisualShaderNodeVectorOp" id=17]
operator = 1

[sub_resource type="VisualShaderNodeVectorOp" id=20]
operator = 2

[sub_resource type="VisualShaderNodeVectorLen" id=22]

[sub_resource type="VisualShaderNodeScalarSmoothStep" id=23]

[sub_resource type="VisualShaderNodeScalarUniform" id=24]
uniform_name = "radius"
default_value_enabled = true
default_value = 2.0

[sub_resource type="VisualShaderNodeScalarOp" id=25]
default_input_values = [ 0, 1.0, 1, 0.0 ]
operator = 2

[sub_resource type="VisualShaderNodeScalarUniform" id=26]
uniform_name = "force"
default_value_enabled = true
default_value = 0.2

[sub_resource type="VisualShaderNodeScalarOp" id=27]
operator = 2

[sub_resource type="VisualShaderNodeVec3Uniform" id=31]
uniform_name = "pushdirection"
default_value_enabled = true
default_value = Vector3( 0, 1, 0 )

[sub_resource type="VisualShaderNodeScalarUniform" id=32]
uniform_name = "sinmult"
default_value_enabled = true
default_value = 0.106

[sub_resource type="VisualShaderNodeScalarConstant" id=33]
constant = 3.14

[sub_resource type="VisualShaderNodeScalarUniform" id=34]
uniform_name = "cosmult"
default_value_enabled = true
default_value = 0.2

[sub_resource type="VisualShaderNodeInput" id=35]
input_name = "time"

[sub_resource type="VisualShaderNodeScalarOp" id=37]
operator = 2

[sub_resource type="VisualShaderNodeScalarOp" id=38]
operator = 2

[sub_resource type="VisualShaderNodeScalarFunc" id=39]
function = 0

[sub_resource type="VisualShaderNodeScalarFunc" id=40]
function = 1

[sub_resource type="VisualShaderNodeInput" id=43]
input_name = "color"

[sub_resource type="VisualShaderNodeInput" id=28]
input_name = "world"

[sub_resource type="VisualShaderNodeVectorOp" id=49]

[sub_resource type="OpenSimplexNoise" id=66]

[sub_resource type="NoiseTexture" id=67]
seamless = true
noise = SubResource( 66 )

[sub_resource type="VisualShaderNodeTexture" id=52]
texture = SubResource( 67 )

[sub_resource type="VisualShaderNodeVectorOp" id=53]

[sub_resource type="VisualShaderNodeScalarUniform" id=55]
uniform_name = "colorfact"
default_value_enabled = true
default_value = 0.31

[sub_resource type="VisualShaderNodeTransformVecMult" id=29]

[sub_resource type="VisualShaderNodeInput" id=64]
input_name = "vertex"

[sub_resource type="VisualShaderNodeVec3Uniform" id=30]
uniform_name = "PlayerPosition"

[sub_resource type="VisualShaderNodeScalarUniform" id=72]
uniform_name = "minradius"
default_value_enabled = true

[sub_resource type="VisualShaderNodeInput" id=73]
input_name = "uv"

[sub_resource type="VisualShaderNodeInput" id=74]
input_name = "uv"

[sub_resource type="VisualShaderNodeVectorOp" id=75]
operator = 2

[sub_resource type="VisualShaderNodeVectorCompose" id=77]

[sub_resource type="VisualShaderNodeVec3Uniform" id=78]
uniform_name = "swaydirection"
default_value_enabled = true
default_value = Vector3( 1, 1, 1 )

[sub_resource type="VisualShaderNodeVectorOp" id=79]
operator = 2

[sub_resource type="VisualShaderNodeVectorOp" id=81]
operator = 1

[sub_resource type="VisualShaderNodeScalarConstant" id=82]
constant = 0.5

[sub_resource type="VisualShaderNodeInput" id=88]
input_name = "uv"

[sub_resource type="VisualShaderNodeVectorDecompose" id=89]

[sub_resource type="VisualShaderNodeScalarOp" id=90]
default_input_values = [ 0, 0.0, 1, 1.0 ]

[sub_resource type="VisualShaderNodeScalarOp" id=91]
default_input_values = [ 0, 0.0, 1, 1.0 ]

[sub_resource type="VisualShaderNodeScalarOp" id=92]
default_input_values = [ 0, 0.0, 1, 1.0 ]

[sub_resource type="VisualShaderNodeVectorOp" id=93]
default_input_values = [ 0, Vector3( 0, 0, 0 ), 1, Vector3( 1, 1, 1 ) ]

[sub_resource type="VisualShaderNodeVectorOp" id=94]
operator = 2

[sub_resource type="VisualShaderNodeVectorOp" id=96]
operator = 2

[sub_resource type="VisualShaderNodeScalarUniform" id=97]
uniform_name = "sway_noise_factor"
default_value_enabled = true
default_value = 1.0

[sub_resource type="VisualShaderNodeScalarOp" id=98]
operator = 2

[sub_resource type="VisualShaderNodeScalarUniform" id=99]
uniform_name = "time_scale"
default_value_enabled = true
default_value = 1.0

[resource]
code = "shader_type spatial;
render_mode depth_draw_alpha_prepass, cull_disabled, specular_schlick_ggx, async_visible, ensure_correct_normals;

uniform sampler2D tex_vtx_53;
uniform float sway_noise_factor = 1;
uniform vec3 swaydirection = vec3(1.000000, 1.000000, 1.000000);
uniform float sinmult = 0.106;
uniform vec3 uv_scale = vec3(1.000000, 1.000000, 1.000000);
uniform float world_location_add = 1;
uniform float time_scale = 1;
uniform float cosmult = 0.2;
uniform float force = 0.2;
uniform float radius = 2;
uniform vec3 PlayerPosition;
uniform vec3 pushdirection = vec3(0.000000, 1.000000, 0.000000);
uniform sampler2D tex_frg_2;
uniform bool BooleanUniform = true;
uniform sampler2D tex_frg_5 : hint_albedo;
uniform sampler2D tex_frg_3 : hint_normal;



void vertex() {
// Input:5
	mat4 n_out5p0 = WORLD_MATRIX;

// Input:2
	vec3 n_out2p0 = VERTEX;

// TransformVectorMult:6
	vec3 n_out6p0 = (n_out5p0 * vec4(n_out2p0, 1.0)).xyz;

// Texture:53
	vec4 tex_vtx_53_read = texture(tex_vtx_53, n_out6p0.xy);
	vec3 n_out53p0 = tex_vtx_53_read.rgb;
	float n_out53p1 = tex_vtx_53_read.a;

// ScalarUniform:97
	float n_out97p0 = sway_noise_factor;

// VectorOp:96
	vec3 n_out96p0 = n_out53p0 * vec3(n_out97p0);

// VectorUniform:78
	vec3 n_out78p0 = swaydirection;

// ScalarUniform:35
	float n_out35p0 = sinmult;

// VectorUniform:100
	vec3 n_out100p0 = uv_scale;

// Input:88
	vec3 n_out88p0 = vec3(UV, 0.0);

// ScalarUniform:102
	float n_out102p0 = world_location_add;

// VectorOp:101
	vec3 n_out101p0 = n_out6p0 * vec3(n_out102p0);

// VectorOp:93
	vec3 n_out93p0 = n_out88p0 + n_out101p0;

// VectorOp:94
	vec3 n_out94p0 = n_out100p0 * n_out93p0;

// VectorDecompose:89
	float n_out89p0 = n_out94p0.x;
	float n_out89p1 = n_out94p0.y;
	float n_out89p2 = n_out94p0.z;

// Input:38
	float n_out38p0 = TIME;

// ScalarUniform:99
	float n_out99p0 = time_scale;

// ScalarOp:98
	float n_out98p0 = n_out38p0 * n_out99p0;

// Scalar:36
	float n_out36p0 = 3.140000;

// ScalarOp:92
	float n_out92p0 = n_out98p0 + n_out36p0;

// ScalarOp:90
	float n_out90p0 = n_out89p0 + n_out92p0;

// ScalarOp:41
	float n_out41p0 = n_out35p0 * n_out90p0;

// ScalarFunc:42
	float n_out42p0 = sin(n_out41p0);

// ScalarOp:91
	float n_out91p0 = n_out92p0 + n_out89p2;

// ScalarUniform:37
	float n_out37p0 = cosmult;

// ScalarOp:40
	float n_out40p0 = n_out91p0 * n_out37p0;

// ScalarFunc:43
	float n_out43p0 = cos(n_out40p0);

// VectorCompose:77
	vec3 n_out77p0 = vec3(n_out42p0, n_out42p0, n_out43p0);

// VectorOp:79
	vec3 n_out79p0 = n_out78p0 * n_out77p0;

// VectorOp:52
	vec3 n_out52p0 = n_out96p0 + n_out79p0;

// Input:66
	vec3 n_out66p0 = VERTEX;

// VectorOp:54
	vec3 n_out54p0 = n_out52p0 + n_out66p0;

// ScalarUniform:32
	float n_out32p0 = force;

// Input:73
	vec3 n_out73p0 = vec3(UV, 0.0);

// ScalarUniform:30
	float n_out30p0 = radius;

// VectorUniform:7
	vec3 n_out7p0 = PlayerPosition;

// VectorOp:17
	vec3 n_out17p0 = n_out6p0 - n_out7p0;

// VectorLen:28
	float n_out28p0 = length(n_out17p0);

// ScalarSmoothStep:29
	float n_in29p1 = 0.00000;
	float n_out29p0 = smoothstep(n_out30p0, n_in29p1, n_out28p0);

// ScalarOp:31
	float n_out31p0 = dot(n_out73p0, vec3(0.333333, 0.333333, 0.333333)) * n_out29p0;

// ScalarOp:33
	float n_out33p0 = n_out32p0 * n_out31p0;

// VectorUniform:34
	vec3 n_out34p0 = pushdirection;

// DotProduct:103
	float n_out103p0 = dot(n_out17p0, n_out34p0);

// ScalarSmoothStep:105
	float n_in105p0 = -1.00000;
	float n_in105p1 = 1.00000;
	float n_out105p0 = smoothstep(n_in105p0, n_in105p1, n_out103p0);

// ScalarOp:106
	float n_out106p0 = n_out33p0 * n_out105p0;

// Input:21
	mat4 n_out21p0 = WORLD_MATRIX;

// VectorOp:18
	vec3 n_out18p0 = n_out17p0 * n_out34p0;

// VectorFunc:19
	vec3 n_out19p0 = normalize(n_out18p0);

// TransformVectorMult:20
	vec3 n_out20p0 = (vec4(n_out19p0, 1.0) * n_out21p0).xyz;

// VectorOp:26
	vec3 n_out26p0 = vec3(n_out106p0) * n_out20p0;

// VectorOp:23
	vec3 n_out23p0 = n_out54p0 - n_out26p0;

// Output:0
	VERTEX = n_out23p0;

}

void fragment() {
// Input:14
	vec3 n_out14p0 = vec3(UV, 0.0);

// Texture:2
	vec4 tex_frg_2_read = texture(tex_frg_2, n_out14p0.xy);
	vec3 n_out2p0 = tex_frg_2_read.rgb;
	float n_out2p1 = tex_frg_2_read.a;

// BooleanUniform:15
	bool n_out15p0 = BooleanUniform;

// Texture:5
	vec4 tex_frg_5_read = texture(tex_frg_5, UV.xy);
	vec3 n_out5p0 = tex_frg_5_read.rgb;
	float n_out5p1 = tex_frg_5_read.a;

// VectorSmoothStep:26
	vec3 n_in26p0 = vec3(0.00000, 0.00000, 0.00000);
	vec3 n_out26p0 = smoothstep(n_in26p0, vec3(n_out5p1), n_out5p0);

// ScalarFunc:12
	float n_out12p0 = 1.0 - dot(n_out26p0, vec3(0.333333, 0.333333, 0.333333));

// ScalarFunc:27
	float n_out27p0 = roundEven(n_out12p0);

// ScalarOp:16
	float n_out16p0 = (n_out15p0 ? 1.0 : 0.0) * n_out27p0;

// ScalarFunc:17
	float n_out17p0 = 1.0 - n_out16p0;

// ScalarOp:25
	float n_in25p1 = 0.00000;
	float n_out25p0 = n_out17p0 + n_in25p1;

// Input:11
	vec3 n_out11p0 = vec3(UV, 0.0);

// Texture:3
	vec4 tex_frg_3_read = texture(tex_frg_3, n_out11p0.xy);
	vec3 n_out3p0 = tex_frg_3_read.rgb;
	float n_out3p1 = tex_frg_3_read.a;

// Output:0
	ALBEDO = n_out2p0;
	ALPHA = n_out25p0;
	NORMALMAP = n_out3p0;

}

void light() {
// Output:0

}
"
graph_offset = Vector2( -706.914, 60.3209 )
modes/cull = 2
modes/depth_draw = 3
flags/ensure_correct_normals = true
nodes/vertex/0/position = Vector2( 1820, 0 )
nodes/vertex/2/node = SubResource( 13 )
nodes/vertex/2/position = Vector2( -3220, 180 )
nodes/vertex/5/node = SubResource( 28 )
nodes/vertex/5/position = Vector2( -3240, 120 )
nodes/vertex/6/node = SubResource( 29 )
nodes/vertex/6/position = Vector2( -2840, 40 )
nodes/vertex/7/node = SubResource( 30 )
nodes/vertex/7/position = Vector2( -1540, -280 )
nodes/vertex/17/node = SubResource( 10 )
nodes/vertex/17/position = Vector2( -900, -220 )
nodes/vertex/18/node = SubResource( 11 )
nodes/vertex/18/position = Vector2( -324, -18 )
nodes/vertex/19/node = SubResource( 12 )
nodes/vertex/19/position = Vector2( -144, 0 )
nodes/vertex/20/node = SubResource( 14 )
nodes/vertex/20/position = Vector2( 180, -100 )
nodes/vertex/21/node = SubResource( 15 )
nodes/vertex/21/position = Vector2( -126, -90 )
nodes/vertex/23/node = SubResource( 17 )
nodes/vertex/23/position = Vector2( 1320, 20 )
nodes/vertex/26/node = SubResource( 20 )
nodes/vertex/26/position = Vector2( 880, -100 )
nodes/vertex/28/node = SubResource( 22 )
nodes/vertex/28/position = Vector2( -500, -200 )
nodes/vertex/29/node = SubResource( 23 )
nodes/vertex/29/position = Vector2( -144, -288 )
nodes/vertex/30/node = SubResource( 24 )
nodes/vertex/30/position = Vector2( -580, -360 )
nodes/vertex/31/node = SubResource( 25 )
nodes/vertex/31/position = Vector2( 180, -300 )
nodes/vertex/32/node = SubResource( 26 )
nodes/vertex/32/position = Vector2( 270, -576 )
nodes/vertex/33/node = SubResource( 27 )
nodes/vertex/33/position = Vector2( 640, -280 )
nodes/vertex/34/node = SubResource( 31 )
nodes/vertex/34/position = Vector2( -1060, 80 )
nodes/vertex/35/node = SubResource( 32 )
nodes/vertex/35/position = Vector2( -1260, 320 )
nodes/vertex/36/node = SubResource( 33 )
nodes/vertex/36/position = Vector2( -1460, 440 )
nodes/vertex/37/node = SubResource( 34 )
nodes/vertex/37/position = Vector2( -1240, 720 )
nodes/vertex/38/node = SubResource( 35 )
nodes/vertex/38/position = Vector2( -1620, 540 )
nodes/vertex/40/node = SubResource( 37 )
nodes/vertex/40/position = Vector2( -780, 620 )
nodes/vertex/41/node = SubResource( 38 )
nodes/vertex/41/position = Vector2( -800, 380 )
nodes/vertex/42/node = SubResource( 39 )
nodes/vertex/42/position = Vector2( -560, 400 )
nodes/vertex/43/node = SubResource( 40 )
nodes/vertex/43/position = Vector2( -560, 660 )
nodes/vertex/46/node = SubResource( 43 )
nodes/vertex/46/position = Vector2( -820, 1020 )
nodes/vertex/52/node = SubResource( 49 )
nodes/vertex/52/position = Vector2( 600, 420 )
nodes/vertex/53/node = SubResource( 52 )
nodes/vertex/53/position = Vector2( 320, 120 )
nodes/vertex/54/node = SubResource( 53 )
nodes/vertex/54/position = Vector2( 1120, 420 )
nodes/vertex/56/node = SubResource( 55 )
nodes/vertex/56/position = Vector2( -620, 1080 )
nodes/vertex/66/node = SubResource( 64 )
nodes/vertex/66/position = Vector2( 800, 580 )
nodes/vertex/72/node = SubResource( 72 )
nodes/vertex/72/position = Vector2( -427.547, -530.607 )
nodes/vertex/73/node = SubResource( 73 )
nodes/vertex/73/position = Vector2( -100, -540 )
nodes/vertex/74/node = SubResource( 74 )
nodes/vertex/74/position = Vector2( -660, 880 )
nodes/vertex/75/node = SubResource( 75 )
nodes/vertex/75/position = Vector2( -260, 980 )
nodes/vertex/77/node = SubResource( 77 )
nodes/vertex/77/position = Vector2( -20, 520 )
nodes/vertex/78/node = SubResource( 78 )
nodes/vertex/78/position = Vector2( -340, 200 )
nodes/vertex/79/node = SubResource( 79 )
nodes/vertex/79/position = Vector2( 160, 400 )
nodes/vertex/81/node = SubResource( 81 )
nodes/vertex/81/position = Vector2( -440, 900 )
nodes/vertex/82/node = SubResource( 82 )
nodes/vertex/82/position = Vector2( -660, 960 )
nodes/vertex/88/node = SubResource( 88 )
nodes/vertex/88/position = Vector2( -2380, 560 )
nodes/vertex/89/node = SubResource( 89 )
nodes/vertex/89/position = Vector2( -1720, 620 )
nodes/vertex/90/node = SubResource( 90 )
nodes/vertex/90/position = Vector2( -1060, 480 )
nodes/vertex/91/node = SubResource( 91 )
nodes/vertex/91/position = Vector2( -1060, 600 )
nodes/vertex/92/node = SubResource( 92 )
nodes/vertex/92/position = Vector2( -1240, 500 )
nodes/vertex/93/node = SubResource( 93 )
nodes/vertex/93/position = Vector2( -2160, 600 )
nodes/vertex/94/node = SubResource( 94 )
nodes/vertex/94/position = Vector2( -1920, 600 )
nodes/vertex/96/node = SubResource( 96 )
nodes/vertex/96/position = Vector2( 800, 300 )
nodes/vertex/97/node = SubResource( 97 )
nodes/vertex/97/position = Vector2( 540, 100 )
nodes/vertex/98/node = SubResource( 98 )
nodes/vertex/98/position = Vector2( -1399.03, 578.017 )
nodes/vertex/99/node = SubResource( 99 )
nodes/vertex/99/position = Vector2( -1820, 820 )
nodes/vertex/100/node = SubResource( 100 )
nodes/vertex/100/position = Vector2( -2200, 320 )
nodes/vertex/101/node = SubResource( 101 )
nodes/vertex/101/position = Vector2( -2460, 300 )
nodes/vertex/102/node = SubResource( 102 )
nodes/vertex/102/position = Vector2( -2880, 420 )
nodes/vertex/103/node = SubResource( 103 )
nodes/vertex/103/position = Vector2( -700, -40 )
nodes/vertex/105/node = SubResource( 104 )
nodes/vertex/105/position = Vector2( -540, -120 )
nodes/vertex/106/node = SubResource( 105 )
nodes/vertex/106/position = Vector2( 860, -220 )
nodes/vertex/connections = PoolIntArray( 5, 0, 6, 0, 18, 0, 19, 0, 21, 0, 20, 0, 19, 0, 20, 1, 17, 0, 28, 0, 32, 0, 33, 0, 31, 0, 33, 1, 37, 0, 40, 1, 29, 0, 31, 1, 66, 0, 54, 1, 17, 0, 18, 0, 34, 0, 18, 1, 77, 0, 79, 1, 78, 0, 79, 0, 40, 0, 43, 0, 35, 0, 41, 0, 41, 0, 42, 0, 90, 0, 41, 1, 91, 0, 40, 0, 92, 0, 90, 1, 92, 0, 91, 0, 46, 0, 75, 1, 74, 0, 81, 0, 81, 0, 75, 0, 82, 0, 81, 1, 79, 0, 52, 1, 52, 0, 54, 0, 36, 0, 92, 1, 42, 0, 77, 0, 43, 0, 77, 2, 89, 0, 90, 0, 94, 0, 89, 0, 6, 0, 53, 0, 93, 0, 94, 1, 42, 0, 77, 1, 20, 0, 26, 1, 26, 0, 23, 1, 54, 0, 23, 0, 23, 0, 0, 0, 53, 0, 96, 0, 97, 0, 96, 1, 96, 0, 52, 0, 38, 0, 98, 0, 99, 0, 98, 1, 98, 0, 92, 0, 100, 0, 94, 0, 6, 0, 101, 0, 101, 0, 93, 1, 89, 2, 91, 1, 17, 0, 103, 0, 34, 0, 103, 1, 103, 0, 105, 2, 105, 0, 106, 1, 73, 0, 31, 0, 30, 0, 29, 0, 28, 0, 29, 2, 33, 0, 106, 0, 106, 0, 26, 0, 7, 0, 17, 1, 6, 0, 17, 0, 2, 0, 6, 1, 102, 0, 101, 1, 88, 0, 93, 0 )
nodes/fragment/0/position = Vector2( 840, 180 )
nodes/fragment/2/node = SubResource( 1 )
nodes/fragment/2/position = Vector2( -80, 80 )
nodes/fragment/3/node = SubResource( 2 )
nodes/fragment/3/position = Vector2( -240, 520 )
nodes/fragment/5/node = SubResource( 5 )
nodes/fragment/5/position = Vector2( -400, 200 )
nodes/fragment/11/node = SubResource( 6 )
nodes/fragment/11/position = Vector2( -720, 460 )
nodes/fragment/12/node = SubResource( 7 )
nodes/fragment/12/position = Vector2( 0, 280 )
nodes/fragment/14/node = SubResource( 9 )
nodes/fragment/14/position = Vector2( -340, 40 )
nodes/fragment/15/node = SubResource( 60 )
nodes/fragment/15/position = Vector2( -144, -90 )
nodes/fragment/16/node = SubResource( 61 )
nodes/fragment/16/position = Vector2( 200, 80 )
nodes/fragment/17/node = SubResource( 62 )
nodes/fragment/17/position = Vector2( 360, 20 )
nodes/fragment/21/node = SubResource( 109 )
nodes/fragment/21/position = Vector2( -600, 220 )
nodes/fragment/25/node = SubResource( 112 )
nodes/fragment/25/position = Vector2( 620, -20 )
nodes/fragment/26/node = SubResource( 113 )
nodes/fragment/26/position = Vector2( -200, 300 )
nodes/fragment/27/node = SubResource( 114 )
nodes/fragment/27/position = Vector2( 297.732, 274.734 )
nodes/fragment/connections = PoolIntArray( 3, 0, 0, 8, 14, 0, 2, 0, 16, 0, 17, 0, 2, 0, 0, 0, 11, 0, 3, 0, 11, 0, 21, 1, 17, 0, 25, 0, 25, 0, 0, 1, 15, 0, 16, 0, 5, 0, 26, 2, 26, 0, 12, 0, 5, 1, 26, 1, 27, 0, 16, 1, 12, 0, 27, 0 )
