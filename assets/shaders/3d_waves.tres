[gd_resource type="VisualShader" load_steps=24 format=2]

[sub_resource type="VisualShaderNodeColorUniform" id=39]
uniform_name = "ColorUniform"

[sub_resource type="VisualShaderNodeTextureUniform" id=40]
uniform_name = "TextureUniform"

[sub_resource type="VisualShaderNodeVectorOp" id=15]
default_input_values = [ 0, Vector3( 0, 0, 0 ), 1, Vector3( 0, 1, 0 ) ]
operator = 2

[sub_resource type="VisualShaderNodeScalarOp" id=20]
operator = 2

[sub_resource type="VisualShaderNodeScalarOp" id=21]

[sub_resource type="VisualShaderNodeInput" id=5]
input_name = "time"

[sub_resource type="VisualShaderNodeScalarOp" id=24]
operator = 2

[sub_resource type="VisualShaderNodeScalarUniform" id=25]
uniform_name = "amplitude"
default_value_enabled = true
default_value = 0.2

[sub_resource type="VisualShaderNodeScalarUniform" id=26]
uniform_name = "frequency"
default_value_enabled = true
default_value = 2.0

[sub_resource type="VisualShaderNodeScalarOp" id=28]
operator = 2

[sub_resource type="VisualShaderNodeVectorDecompose" id=30]

[sub_resource type="VisualShaderNodeScalarFunc" id=31]
function = 0

[sub_resource type="VisualShaderNodeScalarConstant" id=32]
constant = 3.14159

[sub_resource type="VisualShaderNodeInput" id=6]
input_name = "vertex"

[sub_resource type="VisualShaderNodeScalarConstant" id=33]
constant = 2.0

[sub_resource type="VisualShaderNodeScalarOp" id=34]
operator = 2

[sub_resource type="VisualShaderNodeInput" id=35]
input_name = "vertex"

[sub_resource type="VisualShaderNodeScalarUniform" id=36]
uniform_name = "wavespeed"
default_value_enabled = true
default_value = 0.1

[sub_resource type="VisualShaderNodeScalarOp" id=37]
operator = 2

[sub_resource type="VisualShaderNodeVec3Uniform" id=38]
uniform_name = "direction"
default_value_enabled = true
default_value = Vector3( 1, 1, 1 )

[sub_resource type="VisualShaderNodeVectorOp" id=9]
operator = 2

[sub_resource type="VisualShaderNodeInput" id=10]
input_name = "vertex"

[sub_resource type="VisualShaderNodeVectorOp" id=11]

[resource]
code = "shader_type spatial;
render_mode specular_schlick_ggx, async_visible;

uniform float amplitude = 0.2;
uniform float wavespeed = 0.1;
uniform float frequency = 2;
uniform vec3 direction = vec3(1.000000, 1.000000, 1.000000);
uniform vec4 ColorUniform : hint_color;
uniform sampler2D TextureUniform;



void vertex() {
// Input:7
	vec3 n_out7p0 = VERTEX;

// ScalarUniform:21
	float n_out21p0 = amplitude;

// Input:32
	vec3 n_out32p0 = VERTEX;

// VectorDecompose:27
	float n_out27p0 = n_out32p0.x;
	float n_out27p1 = n_out32p0.y;
	float n_out27p2 = n_out32p0.z;

// ScalarUniform:33
	float n_out33p0 = wavespeed;

// Input:2
	float n_out2p0 = TIME;

// ScalarOp:34
	float n_out34p0 = n_out33p0 * n_out2p0;

// ScalarOp:17
	float n_out17p0 = n_out27p0 + n_out34p0;

// Scalar:29
	float n_out29p0 = 3.141590;

// Scalar:30
	float n_out30p0 = 2.000000;

// ScalarOp:31
	float n_out31p0 = n_out29p0 * n_out30p0;

// ScalarUniform:23
	float n_out23p0 = frequency;

// ScalarOp:25
	float n_out25p0 = n_out31p0 * n_out23p0;

// ScalarOp:16
	float n_out16p0 = n_out17p0 * n_out25p0;

// ScalarFunc:28
	float n_out28p0 = sin(n_out16p0);

// ScalarOp:20
	float n_out20p0 = n_out21p0 * n_out28p0;

// Input:3
	vec3 n_out3p0 = VERTEX;

// VectorOp:6
	vec3 n_out6p0 = vec3(n_out20p0) * n_out3p0;

// VectorUniform:35
	vec3 n_out35p0 = direction;

// VectorOp:13
	vec3 n_out13p0 = n_out6p0 * n_out35p0;

// VectorOp:8
	vec3 n_out8p0 = n_out7p0 + n_out13p0;

// Output:0
	VERTEX = n_out8p0;

}

void fragment() {
// ColorUniform:3
	vec3 n_out3p0 = ColorUniform.rgb;
	float n_out3p1 = ColorUniform.a;

// TextureUniform:4
	vec3 n_out4p0;
	float n_out4p1;
	{
		vec4 n_tex_read = texture(TextureUniform, UV.xy);
		n_out4p0 = n_tex_read.rgb;
		n_out4p1 = n_tex_read.a;
	}

// Output:0
	ALBEDO = n_out3p0;
	NORMALMAP = n_out4p0;

}

void light() {
// Output:0

}
"
nodes/vertex/0/position = Vector2( 640, 100 )
nodes/vertex/2/node = SubResource( 5 )
nodes/vertex/2/position = Vector2( -1940, 80 )
nodes/vertex/3/node = SubResource( 6 )
nodes/vertex/3/position = Vector2( -340, 260 )
nodes/vertex/6/node = SubResource( 9 )
nodes/vertex/6/position = Vector2( -160, 140 )
nodes/vertex/7/node = SubResource( 10 )
nodes/vertex/7/position = Vector2( 220, 0 )
nodes/vertex/8/node = SubResource( 11 )
nodes/vertex/8/position = Vector2( 420, 140 )
nodes/vertex/13/node = SubResource( 15 )
nodes/vertex/13/position = Vector2( 220, 160 )
nodes/vertex/16/node = SubResource( 20 )
nodes/vertex/16/position = Vector2( -840, 60 )
nodes/vertex/17/node = SubResource( 21 )
nodes/vertex/17/position = Vector2( -1260, -20 )
nodes/vertex/20/node = SubResource( 24 )
nodes/vertex/20/position = Vector2( -380, 20 )
nodes/vertex/21/node = SubResource( 25 )
nodes/vertex/21/position = Vector2( -680, -120 )
nodes/vertex/23/node = SubResource( 26 )
nodes/vertex/23/position = Vector2( -1420, 360 )
nodes/vertex/25/node = SubResource( 28 )
nodes/vertex/25/position = Vector2( -1100, 260 )
nodes/vertex/27/node = SubResource( 30 )
nodes/vertex/27/position = Vector2( -1640, -180 )
nodes/vertex/28/node = SubResource( 31 )
nodes/vertex/28/position = Vector2( -580, 80 )
nodes/vertex/29/node = SubResource( 32 )
nodes/vertex/29/position = Vector2( -1600, 200 )
nodes/vertex/30/node = SubResource( 33 )
nodes/vertex/30/position = Vector2( -1600, 300 )
nodes/vertex/31/node = SubResource( 34 )
nodes/vertex/31/position = Vector2( -1360, 200 )
nodes/vertex/32/node = SubResource( 35 )
nodes/vertex/32/position = Vector2( -1860, -240 )
nodes/vertex/33/node = SubResource( 36 )
nodes/vertex/33/position = Vector2( -2000, -100 )
nodes/vertex/34/node = SubResource( 37 )
nodes/vertex/34/position = Vector2( -1640, 20 )
nodes/vertex/35/node = SubResource( 38 )
nodes/vertex/35/position = Vector2( -140, 420 )
nodes/vertex/connections = PoolIntArray( 8, 0, 0, 0, 3, 0, 6, 1, 13, 0, 8, 1, 7, 0, 8, 0, 21, 0, 20, 0, 20, 0, 6, 0, 25, 0, 16, 1, 23, 0, 25, 1, 6, 0, 13, 0, 16, 0, 28, 0, 28, 0, 20, 1, 29, 0, 31, 0, 30, 0, 31, 1, 31, 0, 25, 0, 32, 0, 27, 0, 27, 0, 17, 0, 17, 0, 16, 0, 33, 0, 34, 0, 34, 0, 17, 1, 2, 0, 34, 1, 35, 0, 13, 1 )
nodes/fragment/3/node = SubResource( 39 )
nodes/fragment/3/position = Vector2( -140, 60 )
nodes/fragment/4/node = SubResource( 40 )
nodes/fragment/4/position = Vector2( -80, 300 )
nodes/fragment/connections = PoolIntArray( 3, 0, 0, 0, 4, 0, 0, 8 )
